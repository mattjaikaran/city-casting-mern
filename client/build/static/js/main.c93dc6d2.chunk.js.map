{"version":3,"sources":["components/Navbar.js","components/invoice/TableInvoiceRow.js","components/invoice/InvoiceAll.js","components/invoice/InvoiceNew.js","components/invoice/InvoiceEdit.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","id","TableInvoiceRow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","delete","bind","assertThisInitialized","_this2","console","log","obj","confirmAlert","title","message","buttons","label","onClick","axios","get","concat","_id","then","history","push","catch","err","_this3","res","setState","invoice","data","_this4","_this$props$obj","invoiceNumber","createdAt","custCode","dueDate","status","moment","format","Component","InvoiceAll","state","reverse","map","i","invoice_TableInvoiceRow","key","align","style","marginTop","onSortClick","colSpan","tableInvoiceRow","InvoiceNew","onChange","e","defineProperty","target","name","value","handleChange","metal","lineMetal","onSubmit","preventDefault","createdBy","goldPrice","goldBalance","goldUsed","newGoldBalance","silverPrice","silverBalance","platinumPrice","platinumBalance","brassPrice","brassBalance","lineItems","metalTotal","laborTotal","shippingTotal","invoiceTotal","post","lineTotal","total","lineWeight","linePriceDWT","lineLabor","linePieces","lineLaborPC","toFixed","goldClick","_this$state","addLine","lineObj","weight","pieces","styleNumber","lineStyleNumber","description","lineDescription","labor","laborPC","priceDWT","reduce","acc","lineItem","parseFloat","mt","newMt","lbrTotal","handleDeleteLine","lines","toConsumableArray","splice","Date","toLocaleString","type","readOnly","entry_default","react_select_esm","options","ref","lineNumber","InvoiceEdit","updatedAt","otherCharges","match","params","handleStatusChange","tempMetalTotal","App","components_Navbar","react_router","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c93dc6d2.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link to={'/'} className=\"navbar-brand\">CC</Link>\n      <div className=\"\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          {/* <li className=\"nav-item\">\n            <Link to={'/dashboard'} className=\"nav-link\">Dashboard</Link>\n          </li> */}\n          <li className=\"nav-item\">\n            <Link to={'/invoice'} className=\"nav-link\">Invoices</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={'/invoice/new'} className=\"nav-link\">New Invoice</Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { confirmAlert } from 'react-confirm-alert'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\n\nclass TableInvoiceRow extends Component {\n  constructor(props) {\n    super(props)\n    this.delete = this.delete.bind(this)\n  }\n  delete() {\n    console.log(this.props)\n    const { obj } = this.props\n    confirmAlert({\n      title: 'Confirm to submit',\n      message: 'Are you sure? This cannot be undone.',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => {\n            axios.get(`/api/invoice/delete/${obj._id}`, obj)\n              .then((obj) => this.props.history.push('/invoice'))\n              .catch(err => console.log(err))\n          }\n        },\n        {\n          label: 'No',\n          onClick: () => console.log('no delete')\n        }\n      ]\n    })\n  }\n\n  componentDidMount() {\n    axios.get('/api/invoice')\n      .then(res => {\n        this.setState({ invoice: res.data })\n      })\n  }\n\n  componentDidUpdate() {\n    axios.get('/api/invoice')\n      .then(res => {\n        this.setState({ invoice: res.data })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  render() {\n    const { invoiceNumber, createdAt, custCode, dueDate, status } = this.props.obj\n    return (\n        <tr>\n          <td>\n            {invoiceNumber}\n          </td>\n          <td>\n            {custCode}\n          </td>\n          <td>\n            {moment(createdAt).format('lll')}\n          </td>\n          <td>\n            {moment(dueDate).format('lll')}\n          </td>\n          <td>\n            {status}\n          </td>\n          <td>\n            <Link to={`/edit/${this.props.obj._id}`} className=\"btn btn-primary mr-2\">Edit</Link>\n            <button onClick={this.delete} className=\"btn btn-danger\">Delete</button>\n          </td>\n        </tr>\n    );\n  }\n}\n\nexport default TableInvoiceRow\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport TableInvoiceRow from './TableInvoiceRow'\n\nclass InvoiceAll extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      invoice: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('/api/invoice/')\n    .then(res => {\n      this.setState({ invoice: res.data.reverse() })\n    })\n    .catch(err => console.log(err))\n  }\n\n  tableInvoiceRow() {\n    return this.state.invoice.map((obj, i) => {\n      return <TableInvoiceRow obj={obj} key={i} />\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h3 align=\"center\">Invoice List</h3>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n          <thead>\n            <tr>\n              <th onClick={this.onSortClick}>Invoice #</th>\n              <th>Cust Code</th>\n              <th>Date</th>\n              <th>Due Date</th>\n              <th>Status</th>\n              <th colSpan=\"2\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.tableInvoiceRow() }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default InvoiceAll\n// https://city-casting-api.herokuapp.com/api/\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport moment from 'moment'\nimport DateTimePicker from 'react-datetime-picker'\nimport Select from 'react-select'\n\nclass InvoiceNew extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      invoiceNumber: '',\n      createdAt: new Date().toLocaleString(),\n      dueDate: '',\n      createdBy: '',\n      custCode: '',\n      goldPrice: '',\n      goldBalance: '',\n      goldUsed: '',\n      newGoldBalance: '',\n      silverPrice: '',\n      silverBalance: '',\n      platinumPrice: '',\n      platinumBalance: '',\n      brassPrice: '',\n      brassBalance: '',\n      lineItems: [],\n      lineWeight: '',\n      linePieces: '',\n      lineMetal: '',\n      lineStyleNumber: '',\n      lineDescription: '',\n      lineLabor: '',\n      lineLaborPC: '',\n      linePriceDWT: '',\n      lineTotal: '',\n      metalTotal: '',\n      laborTotal: '',\n      shippingTotal: '',\n      invoiceTotal: ''\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleChange = (metal) => {\n    this.setState({ lineMetal: metal.value })\n    console.log(metal)\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault()\n    const obj = {\n      invoiceNumber: this.state.invoiceNumber,\n      createdBy: this.state.createdBy,\n      createdAt: this.state.createdAt,\n      dueDate: this.state.dueDate,\n      custCode: this.state.custCode,\n      goldPrice: this.state.goldPrice,\n      goldBalance: this.state.goldBalance,\n      goldUsed: this.state.goldUsed,\n      newGoldBalance: this.state.newGoldBalance,\n      silverPrice: this.state.silverPrice,\n      silverBalance: this.state.silverBalance,\n      platinumPrice: this.state.platinumPrice,\n      platinumBalance: this.state.platinumBalance,\n      brassPrice: this.state.brassPrice,\n      brassBalance: this.state.brassBalance,\n      lineItems: this.state.lineItems,\n      metalTotal: this.state.metalTotal,\n      laborTotal: this.state.laborTotal,\n      shippingTotal: this.state.shippingTotal,\n      invoiceTotal: this.state.invoiceTotal\n    }\n    axios.post('/api/invoice/add', obj)\n      .then(res => this.props.history.push('/invoice'))\n\n  }\n\n  dueDate = (dueDate) => {\n    this.setState({ dueDate })\n  }\n\n  //calculate line total\n  lineTotal = (e) => {\n    e.preventDefault()\n    const total = ((this.state.lineWeight * (this.state.linePriceDWT + this.state.lineLabor)) + (this.state.linePieces * this.state.lineLaborPC));\n    this.setState({\n      lineTotal: total.toFixed(2)\n    })\n  }\n\n  goldClick = (e) => {\n    e.preventDefault()\n    const { goldBalance, goldUsed } = this.state\n    this.setState({\n      goldUsed: goldUsed,\n      newGoldBalance: (goldBalance - goldUsed).toFixed(2)\n    })\n  }\n\n  addLine = (e) => {\n    e.preventDefault()\n    console.log('new line')\n    const lineObj = {\n      weight: this.state.lineWeight,\n      pieces: this.state.linePieces,\n      metal: this.state.lineMetal,\n      styleNumber: this.state.lineStyleNumber,\n      description: this.state.lineDescription,\n      labor: this.state.lineLabor,\n      laborPC: this.state.lineLaborPC,\n      priceDWT: this.state.linePriceDWT,\n      lineTotal: this.state.lineTotal\n    }\n    this.state.lineItems.push(lineObj)\n    console.log(this.state.lineItems)\n\n    let invoiceTotal = this.state.lineItems.reduce((acc, lineItem) => {\n      const lineTotal = lineItem.lineTotal\n      const newSum = parseFloat(acc) + parseFloat(lineTotal)\n      return newSum.toFixed(2)\n    }, 0)\n\n    const metalTotal = this.state.lineItems.reduce((acc, lineItem) => {\n      if(lineItem.priceDWT === '') {\n        lineItem.priceDWT = 0\n        let mt = lineItem.weight * lineItem.priceDWT.toFixed(2)\n        const newMt = parseFloat(acc) + parseFloat(mt)\n        console.log(acc, mt)\n        // console.log(`weight: ${lineItem.weight}, dwt: ${lineItem.priceDWT}, mt: ${newMt}`)\n        return newMt.toFixed(2)\n      } else if(lineItem.weight === '') {\n        lineItem.weight = 0\n        let mt = parseFloat(acc) + parseFloat(lineItem.weight)\n        console.log(acc, mt)\n        // console.log(`weight: ${lineItem.weight}, dwt: ${lineItem.priceDWT}, mt: ${mt}`)\n        return mt.toFixed(2)\n      } else if(lineItem.priceDWT > 0) {\n        let mt = (parseFloat(lineItem.weight) * parseFloat(lineItem.priceDWT)).toFixed(2)\n        const newMt = parseFloat(acc) + parseFloat(mt)\n        // console.log(`weight: ${lineItem.weight}, dwt: ${lineItem.priceDWT}, newMt: ${newMt}`)\n        return newMt.toFixed(2)\n      } else if(lineItem.labor === '') {\n        lineItem.labor = 0\n        let mt = parseFloat(acc) + lineItem.labor\n        return mt.toFixed(2)\n      }\n    }, 0)\n\n    const laborTotal = this.state.lineItems.reduce((acc, lineItem) => {\n      if(lineItem.laborPC === '') {\n        lineItem.laborPC = 0\n        const newLbrTotal = parseFloat(acc) + lineItem.laborPC\n        return newLbrTotal.toFixed(2)\n      } else {\n        const lbrTotal = (parseFloat(lineItem.pieces) * parseFloat(lineItem.laborPC))\n        const newLbrTotal = parseFloat(acc) + parseFloat(lbrTotal)\n        return newLbrTotal.toFixed(2)\n      }\n    }, 0)\n\n    this.setState({\n      lineWeight: '',\n      linePieces: '',\n      lineMetal: '',\n      lineStyleNumber: '',\n      lineDescription: '',\n      lineLabor: '',\n      lineLaborPC: '',\n      linePriceDWT: '',\n      lineTotal: '',\n      laborTotal: laborTotal,\n      metalTotal: metalTotal,\n      invoiceTotal: invoiceTotal\n    })\n  }\n\n  // fix this.\n  handleDeleteLine = (e, i) => {\n    e.preventDefault()\n    const lines = [...this.state.lineItems]\n    lines.splice(i, 1)\n    console.log(lines)\n    this.setState({lineItems: lines})\n  }\n  // remove = (rowId) => {\n  //   const lines = this.state.lineItems.filter((row) => row.id !== rowId)\n  //   this.setState({data: lines})\n  // };\n\n  render() {\n    const options = [\n      { value: 'Gold', label: 'Gold' },\n      { value: 'Silver', label: 'Silver' },\n      { value: 'Platinum', label: 'Platinum' },\n      { value: 'Brass', label: 'Brass' },\n      { value: 'Bronze', label: 'Bronze' },\n      { value: 'Thai', label: 'Thai' },\n      { value: 'Copper', label: 'Copper' },\n      { value: 'Choco', label: 'Choco' },\n      { value: 'Argentium', label: 'Argentium' }\n    ]\n    return (\n      <div style={{marginTop: 10}} >\n      <h2 className=\"text-center\">Add New Invoice</h2>\n      <hr className=\"mt-3 mb-3\" />\n      <form onSubmit={this.onSubmit}>\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <h4 className=\"text-center\">Info</h4>\n            <div className=\"form-group\">\n              <label>Invoice Number</label>\n              <input\n                type=\"text\"\n                name=\"invoiceNumber\"\n                onChange={this.onChange}\n                value={this.state.invoiceNumber}\n                className=\"form-control\"/>\n            </div>\n            <div className=\"form-group\">\n              <label>Employee</label>\n              <input\n                type=\"text\"\n                name=\"createdBy\"\n                onChange={this.onChange}\n                value={this.state.createdBy}\n                className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n              <label>Date Created</label>\n              <input\n                type=\"text\"\n                name=\"createdAt\"\n                onChange={this.onChange}\n                value={this.state.createdAt}\n                className=\"form-control\"\n                readOnly />\n            </div>\n            <div className=\"form-group\">\n              <label>Due Date</label>\n              <br />\n              <DateTimePicker\n                onChange={this.dueDate}\n                value={this.state.dueDate}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Customer Code</label>\n              <input\n                type=\"text\"\n                name=\"custCode\"\n                onChange={this.onChange}\n                value={this.state.custCode}\n                className=\"form-control\"/>\n            </div>\n          </div>\n          <div className=\"col-sm-6\">\n            <h4 className=\"text-center\">Balances</h4>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label>Gold Price</label>\n                  <input\n                    type=\"text\"\n                    name=\"goldPrice\"\n                    onChange={this.onChange}\n                    value={this.state.goldPrice}\n                    className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                  <label>Gold Balance</label>\n                  <input\n                    type=\"text\"\n                    name=\"goldBalance\"\n                    onChange={this.onChange}\n                    value={this.state.goldBalance}\n                    className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                  <label>Silver Price</label>\n                  <input\n                    type=\"text\"\n                    name=\"silverPrice\"\n                    onChange={this.onChange}\n                    value={this.state.silverPrice}\n                    className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                  <label>Silver Balance</label>\n                  <input\n                    type=\"text\"\n                    name=\"silverBalance\"\n                    onChange={this.onChange}\n                    value={this.state.silverBalance}\n                    className=\"form-control\" />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label>Platinum Price</label>\n                  <input\n                    type=\"text\"\n                    name=\"platinumPrice\"\n                    onChange={this.onChange}\n                    value={this.state.platinumPrice}\n                    className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                  <label>Platinum Balance</label>\n                  <input\n                    type=\"text\"\n                    name=\"platinumBalance\"\n                    onChange={this.onChange}\n                    value={this.state.platinumBalance}\n                    className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                  <label>Brass Price</label>\n                  <input\n                    type=\"text\"\n                    name=\"brassPrice\"\n                    onChange={this.onChange}\n                    value={this.state.brassPrice}\n                    className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                  <label>Brass Balance</label>\n                  <input\n                    type=\"text\"\n                    name=\"brassBalance\"\n                    onChange={this.onChange}\n                    value={this.state.brassBalance}\n                    className=\"form-control\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <hr className=\"mt-5 mb-5\" />\n\n        <div className=\"form-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-1 p-0\">\n              <label>Weight</label>\n              <input\n                type=\"text\"\n                name=\"lineWeight\"\n                onChange={this.onChange}\n                value={this.state.lineWeight}\n                className=\"form-control\" />\n            </div>\n            <div className=\"col-sm-1 p-0\">\n              <label>Pieces</label>\n              <input\n                type=\"text\"\n                name=\"linePieces\"\n                onChange={this.onChange}\n                value={this.state.linePieces}\n                className=\"form-control\" />\n            </div>\n            <div className=\"col-sm-2 p-0\">\n              <label>Metal</label>\n              {/* <input\n                type=\"text\"\n                name=\"lineMetal\"\n                onChange={this.onChange}\n                value={this.state.lineMetal}\n                className=\"form-control\" /> */}\n                <Select\n                  name=\"lineMetal\"\n                  onChange={this.handleChange}\n                  value={this.state.lineMetal}\n                  options={options} />\n            </div>\n            <div className=\"col-sm-1 p-0\">\n              <label>Style #</label>\n              <input\n                type=\"text\"\n                name=\"lineStyleNumber\"\n                onChange={this.onChange}\n                value={this.state.lineStyleNumber}\n                className=\"form-control\" />\n            </div>\n            <div className=\"col-sm-2 p-0\">\n              <label>Description</label>\n              <input\n                type=\"text\"\n                name=\"lineDescription\"\n                onChange={this.onChange}\n                value={this.state.lineDescription}\n                className=\"form-control\" />\n            </div>\n            <div className=\"col-sm-1 p-0\">\n              <label>Labor</label>\n              <input\n                type=\"text\"\n                name=\"lineLabor\"\n                onChange={this.onChange}\n                value={this.state.lineLabor}\n                className=\"form-control\" />\n            </div>\n            <div className=\"col-sm-1 p-0\">\n              <label>Labor_PC</label>\n              <input\n                type=\"text\"\n                name=\"lineLaborPC\"\n                onChange={this.onChange}\n                value={this.state.lineLaborPC}\n                className=\"form-control\" />\n            </div>\n            <div className=\"col-sm-1 p-0\">\n              <label>Price/DWT</label>\n              <input\n                type=\"text\"\n                name=\"linePriceDWT\"\n                onChange={this.onChange}\n                value={this.state.linePriceDWT}\n                className=\"form-control\" />\n            </div>\n            <div className=\"col-sm-2 text-right p-0\">\n              <label>Line Total</label>\n              <input\n                type=\"text\"\n                name=\"lineTotal\"\n                ref=\"lineTotal\"\n                onChange={this.onChange}\n                value={this.state.lineTotal}\n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"mt-2\">\n              <button onClick={this.lineTotal} className=\"btn btn-success\">\n                + Calcuate Line Total\n              </button>\n              <br />\n              <button onClick={this.addLine} className=\"btn btn-secondary mt-1 btn-block\">\n                + Add Line\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"lineItemContent p-0\">\n          <table className=\"table table-striped\">\n            <thead>\n              <tr className=\"addedLineHeadings\">\n                <th>Action</th>\n                <th>Line</th>\n                <th>Weight</th>\n                <th>Pieces</th>\n                <th>Metal</th>\n                <th>Style</th>\n                <th>Description</th>\n                <th>Labor</th>\n                <th>Labor_PC</th>\n                <th>Price/DWT</th>\n                <th>Line Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              { this.state.lineItems.map((lineItem, i) => {\n                const lineNumber = i + 1\n                return (\n                  <tr key={i}>\n                    <td>\n                      <button onClick={(i, e) => this.handleDeleteLine(i)} className=\"btn btn-danger\" id={i}>Delete</button>\n                    </td>\n                    <td>{lineNumber}</td>\n                    <td>{lineItem.weight}</td>\n                    <td>{lineItem.pieces}</td>\n                    <td>{lineItem.metal}</td>\n                    <td>{lineItem.styleNumber}</td>\n                    <td>{lineItem.description}</td>\n                    <td>{lineItem.labor}</td>\n                    <td>{lineItem.laborPC}</td>\n                    <td>{lineItem.priceDWT}</td>\n                    <td>{lineItem.lineTotal}</td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n        </div>\n\n        <div className=\"totals\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"form-group\">\n                <label>Gold Balance</label>\n                <input\n                  type=\"text\"\n                  name=\"goldBalance\"\n                  onChange={this.onChange}\n                  value={this.state.goldBalance}\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Fine Gold Used</label>\n                <input\n                  type=\"text\"\n                  name=\"goldUsed\"\n                  onChange={this.onChange}\n                  value={this.state.goldUsed}\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>New Gold Balance</label>\n                <input\n                  type=\"text\"\n                  name=\"newGoldBalance\"\n                  onChange={this.onChange}\n                  value={this.state.newGoldBalance}\n                  className=\"form-control\"\n                  readOnly\n                />\n              </div>\n              <button onClick={this.goldClick} className=\"btn btn-info\">Calcuate Gold</button>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"form-group\">\n                <label>Metal Total</label>\n                <input\n                  type=\"text\"\n                  name=\"metalTotal\"\n                  onChange={this.metalTotal}\n                  value={this.state.metalTotal}\n                  className=\"form-control\"\n                  readOnly\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Labor Total</label>\n                <input\n                  type=\"text\"\n                  name=\"laborTotal\"\n                  onChange={this.laborTotal}\n                  value={this.state.laborTotal}\n                  className=\"form-control\"\n                  readOnly\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Shipping Total</label>\n                <input\n                  type=\"text\"\n                  name=\"shippingTotal\"\n                  onChange={this.shippingTotal}\n                  value={this.state.shippingTotal}\n                  className=\"form-control\"\n                  readOnly\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Invoice Total</label>\n                <input\n                  type=\"text\"\n                  name=\"invoiceTotal\"\n                  onChange={this.invoiceTotal}\n                  value={this.state.invoiceTotal}\n                  className=\"form-control\"\n                  readOnly\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"form-group float-right\">\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            className=\"btn btn-primary\"/>\n        </div>\n      </form>\n    </div>\n    )\n  }\n}\n\nexport default InvoiceNew\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport moment from 'moment'\nimport DateTimePicker from 'react-datetime-picker'\nimport Select from 'react-select'\n\nclass InvoiceEdit extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      invoiceNumber: '',\n      createdAt: new Date().toLocaleString(),\n      dueDate: '',\n      updatedAt: '',\n      createdBy: '',\n      custCode: '',\n      goldPrice: '',\n      goldBalance: '',\n      goldUsed: '',\n      newGoldBalance: '',\n      silverPrice: '',\n      silverBalance: '',\n      platinumPrice: '',\n      platinumBalance: '',\n      brassPrice: '',\n      brassBalance: '',\n      lineItems: [],\n      lineWeight: '',\n      linePieces: '',\n      lineMetal: '',\n      lineStyleNumber: '',\n      lineDescription: '',\n      lineLabor: '',\n      lineLaborPC: '',\n      linePriceDWT: '',\n      lineTotal: '',\n      metalTotal: '',\n      laborTotal: '',\n      shippingTotal: '',\n      invoiceTotal: '',\n      status: ''\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleChange = (metal) => {\n    this.setState({ lineMetal: metal.value })\n    console.log(metal)\n  }\n\n  componentDidMount() {\n    axios\n    .get(`/api/invoice/edit/${this.props.match.params.id}`)\n    .then(res => {\n      console.log(res.data)\n      this.setState({\n        invoiceNumber: res.data.invoiceNumber,\n        createdBy: res.data.createdBy,\n        createdAt: moment(res.data.createdAt).format('lll'),\n        updatedAt: new Date().toLocaleString(),\n        // dueDate: moment(res.data.dueDate).format('lll'),\n        custCode: res.data.custCode,\n        goldPrice: res.data.goldPrice,\n        goldBalance: res.data.goldBalance,\n        goldUsed: res.data.goldUsed,\n        newGoldBalance: res.data.newGoldBalance,\n        silverPrice: res.data.silverPrice,\n        silverBalance: res.data.silverBalance,\n        platinumPrice: res.data.platinumPrice,\n        platinumBalance: res.data.platinumBalance,\n        brassPrice: res.data.brassPrice,\n        brassBalance: res.data.brassBalance,\n        status: res.data.status,\n        lineItems: res.data.lineItems,\n        metalTotal: res.data.metalTotal.toFixed(2),\n        laborTotal: res.data.laborTotal.toFixed(2),\n        otherCharges: res.data.otherCharges,\n        shippingTotal: res.data.shippingTotal,\n        invoiceTotal: res.data.invoiceTotal.toFixed(2)\n      })\n      console.log(this.state)\n    })\n    .catch(err => {\n      console.log(err)\n      console.log('cmon');\n    })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault()\n    const obj = {\n      invoiceNumber: this.state.invoiceNumber,\n      createdBy: this.state.createdBy,\n      createdAt: this.state.createdAt,\n      updatedAt: new Date().toLocaleString(),\n      dueDate: this.state.dueDate,\n      custCode: this.state.custCode,\n      goldPrice: this.state.goldPrice,\n      goldBalance: this.state.goldBalance,\n      silverPrice: this.state.silverPrice,\n      silverBalance: this.state.silverBalance,\n      platinumPrice: this.state.platinumPrice,\n      platinumBalance: this.state.platinumBalance,\n      brassPrice: this.state.brassPrice,\n      brassBalance: this.state.brassBalance,\n      lineItems: this.state.lineItems,\n      status: this.state.status,\n      metalTotal: this.state.metalTotal,\n      laborTotal: this.state.laborTotal,\n      otherCharges: this.state.otherCharges,\n      shippingTotal: this.state.shippingTotal,\n      invoiceTotal: this.state.invoiceTotal\n    }\n    axios.post(`/api/invoice/update/${this.props.match.params.id}`, obj)\n      .then(res => this.props.history.push('/invoice'))\n  }\n\n  dueDate = (dueDate) => {\n    this.setState({ dueDate })\n  }\n\n  //calculate line total\n  lineTotal = (e) => {\n    e.preventDefault()\n    const total = ((this.state.lineWeight * (this.state.linePriceDWT + this.state.lineLabor)) + (this.state.linePieces * this.state.lineLaborPC));\n    // const newLineTotal = Math.round(total * 100) / 100\n    this.setState({\n      lineTotal: total.toFixed(2)\n    })\n  }\n\n  goldClick = (e) => {\n    e.preventDefault()\n    const { goldBalance, goldUsed } = this.state\n    this.setState({\n      goldUsed: goldUsed,\n      newGoldBalance: goldBalance - goldUsed\n    })\n  }\n  handleStatusChange = (status) => {\n    this.setState({ status: status.value })\n    console.log(status)\n  }\n\n  addLine = (e) => {\n    e.preventDefault()\n    console.log('new line')\n    const lineObj = {\n      weight: this.state.lineWeight,\n      pieces: this.state.linePieces,\n      metal: this.state.lineMetal,\n      styleNumber: this.state.lineStyleNumber,\n      description: this.state.lineDescription,\n      labor: this.state.lineLabor,\n      laborPC: this.state.lineLaborPC,\n      priceDWT: this.state.linePriceDWT,\n      lineTotal: this.state.lineTotal\n    }\n    this.state.lineItems.push(lineObj)\n    console.log(this.state.lineItems)\n\n    let invoiceTotal = this.state.lineItems.reduce((acc, lineItem) => {\n      const lineTotal = lineItem.lineTotal\n      const newSum = parseFloat(acc) + parseFloat(lineTotal)\n      return newSum.toFixed(2)\n    }, 0)\n\n    // const metalTotal = this.state.lineItems.reduce((acc, lineItem) => {\n    //   let mt = (parseFloat(lineItem.weight) * parseFloat(lineItem.priceDWT)).toFixed(2)\n    //   const newMt = parseFloat(acc) + parseFloat(mt)\n    //   console.log(`weight: ${lineItem.weight}, dwt: ${lineItem.priceDWT}, newMt: ${newMt}`)\n    //   return newMt.toFixed(2)\n    // }, 0)\n\n    const laborTotal = this.state.lineItems.reduce((acc, lineItem) => {\n      const lbrTotal = (parseFloat(lineItem.pieces) * parseFloat(lineItem.laborPC))\n      const newLbrTotal = parseFloat(acc) + parseFloat(lbrTotal)\n      return newLbrTotal.toFixed(2)\n    }, 0)\n\n    const tempMetalTotal = invoiceTotal - laborTotal\n\n    this.setState({\n      lineWeight: '',\n      linePieces: '',\n      lineMetal: '',\n      lineStyleNumber: '',\n      lineDescription: '',\n      lineLabor: '',\n      lineLaborPC: '',\n      linePriceDWT: '',\n      lineTotal: '',\n      laborTotal: laborTotal,\n      metalTotal: tempMetalTotal.toFixed(2),\n      invoiceTotal: invoiceTotal\n    })\n  }\n\n  // fix this.\n  handleDeleteLine = (e, i) => {\n    e.preventDefault()\n    const lines = [...this.state.lineItems]\n    lines.splice(i, 1)\n    console.log(lines)\n    this.setState({lineItems: lines})\n  }\n\n  render() {\n    const options = [\n      { value: 'Gold', label: 'Gold' },\n      { value: 'Silver', label: 'Silver' },\n      { value: 'Platinum', label: 'Platinum' },\n      { value: 'Brass', label: 'Brass' },\n      { value: 'Bronze', label: 'Bronze' },\n      { value: 'Thai', label: 'Thai' },\n      { value: 'Copper', label: 'Copper' },\n      { value: 'Choco', label: 'Choco' },\n      { value: 'Argentium', label: 'Argentium' }\n    ]\n    const statusOptions = [\n      { value: 'Approved', label: 'Approved' },\n      { value: 'Pending', label: 'Pending' },\n      { value: 'Denied', label: 'Denied' },\n      { value: 'Casting', label: 'Casting' },\n      { value: 'Polishing', label: 'Polishing' },\n      { value: 'Complete', label: 'Complete' }\n    ]\n    return (\n      <div style={{marginTop: 10}} >\n      <h2 className=\"text-center\">Edit Invoice</h2>\n      <hr className=\"mt-3 mb-3\" />\n      <form onSubmit={this.onSubmit}>\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <h4 className=\"text-center\">Info</h4>\n            <div className=\"form-group\">\n              <label>Invoice Number</label>\n              <input\n                type=\"text\"\n                name=\"invoiceNumber\"\n                onChange={this.onChange}\n                value={this.state.invoiceNumber}\n                className=\"form-control\"/>\n            </div>\n            <div className=\"form-group\">\n              <label>Employee</label>\n              <input\n                type=\"text\"\n                name=\"createdBy\"\n                onChange={this.onChange}\n                value={this.state.createdBy}\n                className=\"form-control\" />\n            </div>\n            <div className=\"form-group\">\n              <label>Date Created</label>\n              <input\n                type=\"text\"\n                name=\"createdAt\"\n                onChange={this.onChange}\n                value={this.state.createdAt}\n                className=\"form-control\"\n                readOnly />\n            </div>\n            <div className=\"form-group\">\n              <label>Due Date</label>\n              <br />\n              <DateTimePicker\n                onChange={this.dueDate}\n                value={this.state.dueDate}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Customer Code</label>\n              <input\n                type=\"text\"\n                name=\"custCode\"\n                onChange={this.onChange}\n                value={this.state.custCode}\n                className=\"form-control\"/>\n            </div>\n            <div className=\"form-group\">\n              <label>Status</label>\n                <Select\n                  name=\"status\"\n                  onChange={this.handleStatusChange}\n                  value={this.state.status}\n                  options={statusOptions} />\n            </div>\n          </div>\n          <div className=\"col-sm-6\">\n            <h4 className=\"text-center\">Balances</h4>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label>Gold Price</label>\n                  <input\n                    type=\"text\"\n                    name=\"goldPrice\"\n                    onChange={this.onChange}\n                    value={this.state.goldPrice}\n                    className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                  <label>Gold Balance</label>\n                  <input\n                    type=\"text\"\n                    name=\"goldBalance\"\n                    onChange={this.onChange}\n                    value={this.state.goldBalance}\n                    className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                  <label>Silver Price</label>\n                  <input\n                    type=\"text\"\n                    name=\"silverPrice\"\n                    onChange={this.onChange}\n                    value={this.state.silverPrice}\n                    className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                  <label>Silver Balance</label>\n                  <input\n                    type=\"text\"\n                    name=\"silverBalance\"\n                    onChange={this.onChange}\n                    value={this.state.silverBalance}\n                    className=\"form-control\" />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <label>Platinum Price</label>\n                  <input\n                    type=\"text\"\n                    name=\"platinumPrice\"\n                    onChange={this.onChange}\n                    value={this.state.platinumPrice}\n                    className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                  <label>Platinum Balance</label>\n                  <input\n                    type=\"text\"\n                    name=\"platinumBalance\"\n                    onChange={this.onChange}\n                    value={this.state.platinumBalance}\n                    className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                  <label>Brass Price</label>\n                  <input\n                    type=\"text\"\n                    name=\"brassPrice\"\n                    onChange={this.onChange}\n                    value={this.state.brassPrice}\n                    className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                  <label>Brass Balance</label>\n                  <input\n                    type=\"text\"\n                    name=\"brassBalance\"\n                    onChange={this.onChange}\n                    value={this.state.brassBalance}\n                    className=\"form-control\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <hr className=\"mt-5 mb-5\" />\n\n        <div className=\"form-group\">\n          <div className=\"row\">\n            <div className=\"col-sm-1 p-0\">\n              <label>Weight</label>\n              <input\n                type=\"text\"\n                name=\"lineWeight\"\n                onChange={this.onChange}\n                value={this.state.lineWeight}\n                className=\"form-control\" />\n            </div>\n            <div className=\"col-sm-1 p-0\">\n              <label>Pieces</label>\n              <input\n                type=\"text\"\n                name=\"linePieces\"\n                onChange={this.onChange}\n                value={this.state.linePieces}\n                className=\"form-control\" />\n            </div>\n            <div className=\"col-sm-2 p-0\">\n              <label>Metal</label>\n                <Select\n                  name=\"lineMetal\"\n                  onChange={this.handleChange}\n                  value={this.state.lineMetal}\n                  options={options} />\n            </div>\n            <div className=\"col-sm-1 p-0\">\n              <label>Style #</label>\n              <input\n                type=\"text\"\n                name=\"lineStyleNumber\"\n                onChange={this.onChange}\n                value={this.state.lineStyleNumber}\n                className=\"form-control\" />\n            </div>\n            <div className=\"col-sm-2 p-0\">\n              <label>Description</label>\n              <input\n                type=\"text\"\n                name=\"lineDescription\"\n                onChange={this.onChange}\n                value={this.state.lineDescription}\n                className=\"form-control\" />\n            </div>\n            <div className=\"col-sm-1 p-0\">\n              <label>Labor</label>\n              <input\n                type=\"text\"\n                name=\"lineLabor\"\n                onChange={this.onChange}\n                value={this.state.lineLabor}\n                className=\"form-control\" />\n            </div>\n            <div className=\"col-sm-1 p-0\">\n              <label>Labor_PC</label>\n              <input\n                type=\"text\"\n                name=\"lineLaborPC\"\n                onChange={this.onChange}\n                value={this.state.lineLaborPC}\n                className=\"form-control\" />\n            </div>\n            <div className=\"col-sm-1 p-0\">\n              <label>Price/DWT</label>\n              <input\n                type=\"text\"\n                name=\"linePriceDWT\"\n                onChange={this.onChange}\n                value={this.state.linePriceDWT}\n                className=\"form-control\" />\n            </div>\n            <div className=\"col-sm-2 text-right p-0\">\n              <label>Line Total</label>\n              <input\n                type=\"text\"\n                name=\"lineTotal\"\n                ref=\"lineTotal\"\n                onChange={this.onChange}\n                value={this.state.lineTotal}\n                className=\"form-control\"\n              />\n            </div>\n            <div className=\"mt-2\">\n              <button onClick={this.lineTotal} className=\"btn btn-success\">\n                + Calcuate Line Total\n              </button>\n              <br />\n              <button onClick={this.addLine} className=\"btn btn-secondary mt-1 btn-block\">\n                + Add Line\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"lineItemContent p-0\">\n          <table className=\"table table-striped\">\n            <thead>\n              <tr className=\"addedLineHeadings\">\n                <th>Action</th>\n                <th>Line</th>\n                <th>Weight</th>\n                <th>Pieces</th>\n                <th>Metal</th>\n                <th>Style</th>\n                <th>Description</th>\n                <th>Labor</th>\n                <th>Labor_PC</th>\n                <th>Price/DWT</th>\n                <th>Line Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              { this.state.lineItems.map((lineItem, i) => {\n                const lineNumber = i + 1\n                return (\n                  <tr key={i}>\n                    <td>\n                      <button onClick={i => this.handleDeleteLine(i)} className=\"btn btn-danger\">Delete</button>\n                    </td>\n                    <td>{lineNumber}</td>\n                    <td>{lineItem.weight}</td>\n                    <td>{lineItem.pieces}</td>\n                    <td>{lineItem.metal}</td>\n                    <td>{lineItem.styleNumber}</td>\n                    <td>{lineItem.description}</td>\n                    <td>{lineItem.labor}</td>\n                    <td>{lineItem.laborPC}</td>\n                    <td>{lineItem.priceDWT}</td>\n                    <td>{lineItem.lineTotal}</td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n        </div>\n\n        <div className=\"totals\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"form-group\">\n                <label>Gold Balance</label>\n                <input\n                  type=\"text\"\n                  name=\"goldBalance\"\n                  onChange={this.onChange}\n                  value={this.state.goldBalance}\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Fine Gold Used</label>\n                <input\n                  type=\"text\"\n                  name=\"goldUsed\"\n                  onChange={this.onChange}\n                  value={this.state.goldUsed}\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>New Gold Balance</label>\n                <input\n                  type=\"text\"\n                  name=\"newGoldBalance\"\n                  onChange={this.onChange}\n                  value={this.state.newGoldBalance}\n                  className=\"form-control\"\n                  readOnly\n                />\n              </div>\n              <button onClick={this.goldClick} className=\"btn btn-info\">Calcuate Gold</button>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"form-group\">\n                <label>Metal Total</label>\n                <input\n                  type=\"text\"\n                  name=\"metalTotal\"\n                  onChange={this.metalTotal}\n                  value={this.state.metalTotal}\n                  className=\"form-control\"\n                  readOnly\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Labor Total</label>\n                <input\n                  type=\"text\"\n                  name=\"laborTotal\"\n                  onChange={this.laborTotal}\n                  value={this.state.laborTotal}\n                  className=\"form-control\"\n                  readOnly\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Shipping Total</label>\n                <input\n                  type=\"text\"\n                  name=\"shippingTotal\"\n                  onChange={this.shippingTotal}\n                  value={this.state.shippingTotal}\n                  className=\"form-control\"\n                  readOnly\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Invoice Total</label>\n                <input\n                  type=\"text\"\n                  name=\"invoiceTotal\"\n                  onChange={this.invoiceTotal}\n                  value={this.state.invoiceTotal}\n                  className=\"form-control\"\n                  readOnly\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"form-group float-right\">\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            className=\"btn btn-primary\"/>\n        </div>\n      </form>\n    </div>\n    )\n  }\n}\n\nexport default InvoiceEdit\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport './App.css'\n\nimport Navbar from './components/Navbar'\nimport InvoiceAll from './components/invoice/InvoiceAll'\nimport InvoiceNew from './components/invoice/InvoiceNew'\nimport InvoiceEdit from './components/invoice/InvoiceEdit'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <Navbar />\n          <Switch>\n            <Route path='/' component={InvoiceAll} />\n            <Route path='/invoice/new' component={InvoiceNew} />\n            <Route path='/invoice' component={InvoiceAll} />\n            <Route path='/edit/:id' component={InvoiceEdit} />\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}